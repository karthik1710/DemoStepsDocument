Step 1: Create a maven quickstart project - we have created it and named it as FirstHibernate

Step 2: Add Hibernate dependencies (Include Hibernate framework into your project) inside pom.xml (project object model) - pom.xml will act as an input info for maven

<dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-core</artifactId>
    <version>5.3.6.Final</version>
</dependency>
<dependency>
    <groupId>org.hibernate.validator</groupId>
    <artifactId>hibernate-validator</artifactId>
    <version>6.0.12.Final</version>
</dependency>

Step 3: Add H2 database dependencies.

<dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
    <version>1.4.197</version>
</dependency>

Step 4: Add a folder named java inside src/main folder (It is applicable if you dont see that folder).

Step 5: create Hibernate.cfg.xml inside src/main/java folder and this file will contain configuration information about Hibernate & H2 database.

<?xml version="1.0" encoding="UTF-8"?>
<hibernate-configuration>
<session-factory>
<property name="hbm2ddl.auto">create</property>
<property name="hiberate.dialect">org.hibernate.dialect.H2Dialect</property>
<property name="hibernate.connection.driver_class">org.h2.Driver</property>
<property name="hibernate.connection.url">jdbc:h2:tcp://localhost/~/SimpleHB</property>
<property name="hibernate.connection.username">sa</property>
<property name="hibernate.connection.password">sa@123</property>
<property name="show_sql">true</property>
<property name="current_session_context_class">thread</property>
</session-factory>
</hibernate-configuration>

Step 6: create a Database in H2 and name it as SimpleHB and define the username and password for the same

Step 7: Create an Entity class called Product and place it inside model package inside src/main/java folder.

package model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name="ProductDetails")
public class Product {
		
		@Id
		@GeneratedValue(strategy=GenerationType.IDENTITY)
		@Column(name="productID")
		private int pId;
		@Column(name="productName")
		private String pName;
		@Column(name="productCost")
		private int pCost;
	
		public Product()
		{
		
		}
	
		public Product(String pName, int pCost) {
			this.pName = pName;
			this.pCost = pCost;
		}

		public int getpId() {
			return pId;
		}
		public void setpId(int pId) {
			this.pId = pId;
		}
		public String getpName() {
			return pName;
		}
		public void setpName(String pName) {
			this.pName = pName;
		}
		public int getpCost() {
			return pCost;
		}
		public void setpCost(int pCost) {
			this.pCost = pCost;
		}	
}

Step 8: build a DBConfig class inside model package which contains configuration object, sessionfactory object and session object.

package model;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class DBConfig {

	private Configuration cfg;
	private SessionFactory sf;
	private Session sess;
	
	public DBConfig()
	{
		cfg = new Configuration();
		sf = cfg.configure("Hibernate.cfg.xml").addAnnotatedClass(Product.class).buildSessionFactory();
	}
	public Session getSess()
	{
		sess = sf.getCurrentSession();
		return sess;
	}
}


Step 9: create ProductDAO Class in the model package which will contain the CRUD operations based on the entity class.

package model;

import org.hibernate.Session;

public class ProductDAO {

	private DBConfig db;
	private Session sess;
	public ProductDAO()
	{
		db = new DBConfig();
	}
	
	public void insertProduct(Product p)
	{
		try
		{
			sess = db.getSess();
			sess.beginTransaction();
			sess.save(p);
			sess.getTransaction().commit();
			
		}catch(Exception ex)
		{
			sess.getTransaction().rollback();
			ex.printStackTrace();
		}
	}
	
}



Step 10: Inside the main method - Create the object of Product class and pass the value for pname and pcost, then create the object of ProductDAO and call the insertProduct method and pass the product object to it.


package com.vinodh.FirstHibernate;

import model.Product;
import model.ProductDAO;

/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
    	try
    	{
    		Product p = new Product("Apple",1000);
    		ProductDAO pd = new ProductDAO();
    		pd.insertProduct(p);
    		System.out.println("Success");
    	}catch(Exception ex)
    	{
    		ex.printStackTrace();
    	}
        
    }
}


Step 11: Ensure all your code is handled with Exceptions. (Try and Catch)


Step 12: Run the main function, rightclick inside your main function, run-as java application

Maven Steps after creating the project

1. right-click the project and choose run-as and select maven build...


i, In Goals - Type compile and run it.
ii, In Goals - Type test-compile and run it.
iii, In Goals - Type test and run it.
iv, In Goals - Type install and run it.

The above steps will create a Jar file of your project.




















